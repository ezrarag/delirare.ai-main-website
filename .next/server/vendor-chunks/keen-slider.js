"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/keen-slider";
exports.ids = ["vendor-chunks/keen-slider"];
exports.modules = {

/***/ "(ssr)/./node_modules/keen-slider/react.js":
/*!*******************************************!*\
  !*** ./node_modules/keen-slider/react.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: !0\n}));\nvar n = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction t(n) {\n    return Array.prototype.slice.call(n);\n}\nfunction e(n, t) {\n    var e = Math.floor(n);\n    return e === t || e + 1 === t ? n : t;\n}\nfunction i() {\n    return Date.now();\n}\nfunction r(n, t, e) {\n    if (t = \"data-keen-slider-\" + t, null === e) return n.removeAttribute(t);\n    n.setAttribute(t, e || \"\");\n}\nfunction a(n, e) {\n    return e = e || document, \"function\" == typeof n && (n = n(e)), Array.isArray(n) ? n : \"string\" == typeof n ? t(e.querySelectorAll(n)) : n instanceof HTMLElement ? [\n        n\n    ] : n instanceof NodeList ? t(n) : [];\n}\nfunction o(n) {\n    n.raw && (n = n.raw), n.cancelable && !n.defaultPrevented && n.preventDefault();\n}\nfunction u(n) {\n    n.raw && (n = n.raw), n.stopPropagation && n.stopPropagation();\n}\nfunction c() {\n    var n = [];\n    return {\n        add: function(t, e, i, r) {\n            t.addListener ? t.addListener(i) : t.addEventListener(e, i, r), n.push([\n                t,\n                e,\n                i,\n                r\n            ]);\n        },\n        input: function(n, t, e, i) {\n            this.add(n, t, function(n) {\n                return function(t) {\n                    t.nativeEvent && (t = t.nativeEvent);\n                    var e = t.changedTouches || [], i = t.targetTouches || [], r = t.detail && t.detail.x ? t.detail : null;\n                    return n({\n                        id: r ? r.identifier ? r.identifier : \"i\" : i[0] ? i[0] ? i[0].identifier : \"e\" : \"d\",\n                        idChanged: r ? r.identifier ? r.identifier : \"i\" : e[0] ? e[0] ? e[0].identifier : \"e\" : \"d\",\n                        raw: t,\n                        x: r && r.x ? r.x : i[0] ? i[0].screenX : r ? r.x : t.pageX,\n                        y: r && r.y ? r.y : i[0] ? i[0].screenY : r ? r.y : t.pageY\n                    });\n                };\n            }(e), i);\n        },\n        purge: function() {\n            n.forEach(function(n) {\n                n[0].removeListener ? n[0].removeListener(n[2]) : n[0].removeEventListener(n[1], n[2], n[3]);\n            }), n = [];\n        }\n    };\n}\nfunction s(n, t, e) {\n    return Math.min(Math.max(n, t), e);\n}\nfunction d(n) {\n    return (n > 0 ? 1 : 0) - (n < 0 ? 1 : 0) || +n;\n}\nfunction l(n) {\n    var t = n.getBoundingClientRect();\n    return {\n        height: e(t.height, n.offsetHeight),\n        width: e(t.width, n.offsetWidth)\n    };\n}\nfunction f(n, t, e, i) {\n    var r = n && n[t];\n    return null == r ? e : i && \"function\" == typeof r ? r() : r;\n}\nfunction p(n) {\n    return Math.round(1e6 * n) / 1e6;\n}\nfunction v(n, t) {\n    if (n === t) return !0;\n    var e = typeof n;\n    if (e !== typeof t) return !1;\n    if (\"object\" !== e || null === n || null === t) return \"function\" === e && n.toString() === t.toString();\n    if (n.length !== t.length || Object.getOwnPropertyNames(n).length !== Object.getOwnPropertyNames(t).length) return !1;\n    for(var i in n)if (!v(n[i], t[i])) return !1;\n    return !0;\n}\nvar h = function() {\n    return h = Object.assign || function(n) {\n        for(var t, e = 1, i = arguments.length; e < i; e++)for(var r in t = arguments[e])Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        return n;\n    }, h.apply(this, arguments);\n};\nfunction m(n, t, e) {\n    if (e || 2 === arguments.length) for(var i, r = 0, a = t.length; r < a; r++)!i && r in t || (i || (i = Array.prototype.slice.call(t, 0, r)), i[r] = t[r]);\n    return n.concat(i || Array.prototype.slice.call(t));\n}\nfunction g(n) {\n    var t, e, i, r, a, o;\n    function u(t) {\n        o || (o = t), c(!0);\n        var a = t - o;\n        a > i && (a = i);\n        var l = r[e];\n        if (l[3] < a) return e++, u(t);\n        var f = l[2], p = l[4], v = l[0], h = l[1] * (0, l[5])(0 === p ? 1 : (a - f) / p);\n        if (h && n.track.to(v + h), a < i) return d();\n        o = null, c(!1), s(null), n.emit(\"animationEnded\");\n    }\n    function c(n) {\n        t.active = n;\n    }\n    function s(n) {\n        t.targetIdx = n;\n    }\n    function d() {\n        var n;\n        n = u, a = window.requestAnimationFrame(n);\n    }\n    function l() {\n        var t;\n        t = a, window.cancelAnimationFrame(t), c(!1), s(null), o && n.emit(\"animationStopped\"), o = null;\n    }\n    return t = {\n        active: !1,\n        start: function(t) {\n            if (l(), n.track.details) {\n                var a = 0, o = n.track.details.position;\n                e = 0, i = 0, r = t.map(function(n) {\n                    var t, e = Number(o), r = null !== (t = n.earlyExit) && void 0 !== t ? t : n.duration, u = n.easing, c = n.distance * u(r / n.duration) || 0;\n                    o += c;\n                    var s = i;\n                    return i += r, a += c, [\n                        e,\n                        n.distance,\n                        s,\n                        i,\n                        n.duration,\n                        u\n                    ];\n                }), s(n.track.distToIdx(a)), d(), n.emit(\"animationStarted\");\n            }\n        },\n        stop: l,\n        targetIdx: null\n    };\n}\nfunction b(n) {\n    var t, e, r, a, o, u, c, l, v, h, g, b, y, x, k = 1 / 0, w = [], M = null, T = 0;\n    function C(n) {\n        P(T + n);\n    }\n    function E(n) {\n        var t = z(T + n).abs;\n        return O(t) ? t : null;\n    }\n    function z(n) {\n        var t = Math.floor(Math.abs(p(n / e))), i = p((n % e + e) % e);\n        i === e && (i = 0);\n        var r = d(n), a = c.indexOf(m([], c, !0).reduce(function(n, t) {\n            return Math.abs(t - i) < Math.abs(n - i) ? t : n;\n        })), o = a;\n        return r < 0 && t++, a === u && (o = 0, t += r > 0 ? 1 : -1), {\n            abs: o + t * u * r,\n            origin: a,\n            rel: o\n        };\n    }\n    function I(n, t, e) {\n        var i;\n        if (t || !S()) return A(n, e);\n        if (!O(n)) return null;\n        var r = z(null != e ? e : T), a = r.abs, o = n - r.rel, c = a + o;\n        i = A(c);\n        var s = A(c - u * d(o));\n        return (null !== s && Math.abs(s) < Math.abs(i) || null === i) && (i = s), p(i);\n    }\n    function A(n, t) {\n        if (null == t && (t = p(T)), !O(n) || null === n) return null;\n        n = Math.round(n);\n        var i = z(t), r = i.abs, a = i.rel, o = i.origin, s = L(n), d = (t % e + e) % e, l = c[o], f = Math.floor((n - (r - a)) / u) * e;\n        return p(l - d - l + c[s] + f + (o === u ? e : 0));\n    }\n    function O(n) {\n        return D(n) === n;\n    }\n    function D(n) {\n        return s(n, v, h);\n    }\n    function S() {\n        return a.loop;\n    }\n    function L(n) {\n        return (n % u + u) % u;\n    }\n    function P(t) {\n        var e;\n        e = t - T, w.push({\n            distance: e,\n            timestamp: i()\n        }), w.length > 6 && (w = w.slice(-6)), T = p(t);\n        var r = _().abs;\n        if (r !== M) {\n            var a = null !== M;\n            M = r, a && n.emit(\"slideChanged\");\n        }\n    }\n    function _(i) {\n        var c = i ? null : function() {\n            if (u) {\n                var n = S(), t = n ? (T % e + e) % e : T, i = (n ? T % e : T) - o[0][2], c = 0 - (i < 0 && n ? e - Math.abs(i) : i), s = 0, l = z(T), f = l.abs, p = l.rel, m = o[p][2], k = o.map(function(t, i) {\n                    var r = c + s;\n                    (r < 0 - t[0] || r > 1) && (r += (Math.abs(r) > e - 1 && n ? e : 0) * d(-r));\n                    var o = i - p, l = d(o), v = o + f;\n                    n && (-1 === l && r > m && (v += u), 1 === l && r < m && (v -= u), null !== g && v < g && (r += e), null !== b && v > b && (r -= e));\n                    var h = r + t[0] + t[1], y = Math.max(r >= 0 && h <= 1 ? 1 : h < 0 || r > 1 ? 0 : r < 0 ? Math.min(1, (t[0] + r) / t[0]) : (1 - r) / t[0], 0);\n                    return s += t[0] + t[1], {\n                        abs: v,\n                        distance: a.rtl ? -1 * r + 1 - t[0] : r,\n                        portion: y,\n                        size: t[0]\n                    };\n                });\n                return f = D(f), p = L(f), {\n                    abs: D(f),\n                    length: r,\n                    max: x,\n                    maxIdx: h,\n                    min: y,\n                    minIdx: v,\n                    position: T,\n                    progress: n ? t / e : T / r,\n                    rel: p,\n                    slides: k,\n                    slidesLength: e\n                };\n            }\n        }();\n        return t.details = c, n.emit(\"detailsChanged\"), c;\n    }\n    return t = {\n        absToRel: L,\n        add: C,\n        details: null,\n        distToIdx: E,\n        idxToDist: I,\n        init: function(t) {\n            if (function() {\n                if (a = n.options, o = (a.trackConfig || []).map(function(n) {\n                    return [\n                        f(n, \"size\", 1),\n                        f(n, \"spacing\", 0),\n                        f(n, \"origin\", 0)\n                    ];\n                }), u = o.length) {\n                    e = p(o.reduce(function(n, t) {\n                        return n + t[0] + t[1];\n                    }, 0));\n                    var t, i = u - 1;\n                    r = p(e + o[0][2] - o[i][0] - o[i][2] - o[i][1]), c = o.reduce(function(n, e) {\n                        if (!n) return [\n                            0\n                        ];\n                        var i = o[n.length - 1], r = n[n.length - 1] + (i[0] + i[2]) + i[1];\n                        return r -= e[2], n[n.length - 1] > r && (r = n[n.length - 1]), r = p(r), n.push(r), (!t || t < r) && (l = n.length - 1), t = r, n;\n                    }, null), 0 === r && (l = 0), c.push(p(e));\n                }\n            }(), !u) return _(!0);\n            var i;\n            !function() {\n                var t = n.options.range, e = n.options.loop;\n                g = v = e ? f(e, \"min\", -1 / 0) : 0, b = h = e ? f(e, \"max\", k) : l;\n                var i = f(t, \"min\", null), r = f(t, \"max\", null);\n                null !== i && (v = i), null !== r && (h = r), y = v === -1 / 0 ? v : n.track.idxToDist(v || 0, !0, 0), x = h === k ? h : I(h, !0, 0), null === r && (b = h), f(t, \"align\", !1) && h !== k && 0 === o[L(h)][2] && (x -= 1 - o[L(h)][0], h = E(x - T)), y = p(y), x = p(x);\n            }(), i = t, Number(i) === i ? C(A(D(t))) : _();\n        },\n        to: P,\n        velocity: function() {\n            var n = i(), t = w.reduce(function(t, e) {\n                var i = e.distance, r = e.timestamp;\n                return n - r > 200 || (d(i) !== d(t.distance) && t.distance && (t = {\n                    distance: 0,\n                    lastTimestamp: 0,\n                    time: 0\n                }), t.time && (t.distance += i), t.lastTimestamp && (t.time += r - t.lastTimestamp), t.lastTimestamp = r), t;\n            }, {\n                distance: 0,\n                lastTimestamp: 0,\n                time: 0\n            });\n            return t.distance / t.time || 0;\n        }\n    };\n}\nfunction y(n) {\n    var t, e, i, r, a, o, u, c;\n    function l(n) {\n        return 2 * n;\n    }\n    function f(n) {\n        return s(n, u, c);\n    }\n    function p(n) {\n        return 1 - Math.pow(1 - n, 3);\n    }\n    function v() {\n        return i ? n.track.velocity() : 0;\n    }\n    function h() {\n        b();\n        var t = \"free-snap\" === n.options.mode, e = n.track, i = v();\n        r = d(i);\n        var u = n.track.details, c = [];\n        if (i || !t) {\n            var s = m(i), h = s.dist, g = s.dur;\n            if (g = l(g), h *= r, t) {\n                var y = e.idxToDist(e.distToIdx(h), !0);\n                y && (h = y);\n            }\n            c.push({\n                distance: h,\n                duration: g,\n                easing: p\n            });\n            var x = u.position, k = x + h;\n            if (k < a || k > o) {\n                var w = k < a ? a - x : o - x, M = 0, T = i;\n                if (d(w) === r) {\n                    var C = Math.min(Math.abs(w) / Math.abs(h), 1), E = function(n) {\n                        return 1 - Math.pow(1 - n, 1 / 3);\n                    }(C) * g;\n                    c[0].earlyExit = E, T = i * (1 - C);\n                } else c[0].earlyExit = 0, M += w;\n                var z = m(T, 100), I = z.dist * r;\n                n.options.rubberband && (c.push({\n                    distance: I,\n                    duration: l(z.dur),\n                    easing: p\n                }), c.push({\n                    distance: -I + M,\n                    duration: 500,\n                    easing: p\n                }));\n            }\n            n.animator.start(c);\n        } else n.moveToIdx(f(u.abs), !0, {\n            duration: 500,\n            easing: function(n) {\n                return 1 + --n * n * n * n * n;\n            }\n        });\n    }\n    function m(n, t) {\n        void 0 === t && (t = 1e3);\n        var e = 147e-9 + (n = Math.abs(n)) / t;\n        return {\n            dist: Math.pow(n, 2) / e,\n            dur: n / e\n        };\n    }\n    function g() {\n        var t = n.track.details;\n        t && (a = t.min, o = t.max, u = t.minIdx, c = t.maxIdx);\n    }\n    function b() {\n        n.animator.stop();\n    }\n    n.on(\"updated\", g), n.on(\"optionsChanged\", g), n.on(\"created\", g), n.on(\"dragStarted\", function() {\n        i = !1, b(), t = e = n.track.details.abs;\n    }), n.on(\"dragChecked\", function() {\n        i = !0;\n    }), n.on(\"dragEnded\", function() {\n        var i = n.options.mode;\n        \"snap\" === i && function() {\n            var i = n.track, r = n.track.details, u = r.position, c = d(v());\n            (u > o || u < a) && (c = 0);\n            var s = t + c;\n            0 === r.slides[i.absToRel(s)].portion && (s -= c), t !== e && (s = e), d(i.idxToDist(s, !0)) !== c && (s += c), s = f(s);\n            var l = i.idxToDist(s, !0);\n            n.animator.start([\n                {\n                    distance: l,\n                    duration: 500,\n                    easing: function(n) {\n                        return 1 + --n * n * n * n * n;\n                    }\n                }\n            ]);\n        }(), \"free\" !== i && \"free-snap\" !== i || h();\n    }), n.on(\"dragged\", function() {\n        e = n.track.details.abs;\n    });\n}\nfunction x(n) {\n    var t, e, i, r, l, f, p, v, h, m, g, b, y, x, k, w, M, T, C = c();\n    function E(t) {\n        if (f && v === t.id) {\n            var a = O(t);\n            if (h) {\n                if (!A(t)) return I(t);\n                m = a, h = !1, n.emit(\"dragChecked\");\n            }\n            if (w) return m = a;\n            o(t);\n            var c = function(t) {\n                if (M === -1 / 0 && T === 1 / 0) return t;\n                var i = n.track.details, a = i.length, o = i.position, u = s(t, M - o, T - o);\n                if (0 === a) return 0;\n                if (!n.options.rubberband) return u;\n                if (o <= T && o >= M) return t;\n                if (o < M && e > 0 || o > T && e < 0) return t;\n                var c = (o < M ? o - M : o - T) / a, d = r * a, f = Math.abs(c * d), p = Math.max(0, 1 - f / l * 2);\n                return p * p * t;\n            }(p(m - a) / r * i);\n            e = d(c);\n            var y = n.track.details.position;\n            (y > M && y < T || y === M && e > 0 || y === T && e < 0) && u(t), g += c, !b && Math.abs(g * r) > 5 && (b = !0), n.track.add(c), m = a, n.emit(\"dragged\");\n        }\n    }\n    function z(t) {\n        !f && n.track.details && n.track.details.length && (g = 0, f = !0, b = !1, h = !0, v = t.id, A(t), m = O(t), n.emit(\"dragStarted\"));\n    }\n    function I(t) {\n        f && v === t.idChanged && (f = !1, n.emit(\"dragEnded\"));\n    }\n    function A(n) {\n        var t = D(), e = t ? n.y : n.x, i = t ? n.x : n.y, r = void 0 !== y && void 0 !== x && Math.abs(x - i) <= Math.abs(y - e);\n        return y = e, x = i, r;\n    }\n    function O(n) {\n        return D() ? n.y : n.x;\n    }\n    function D() {\n        return n.options.vertical;\n    }\n    function S() {\n        r = n.size, l = D() ? window.innerHeight : window.innerWidth;\n        var t = n.track.details;\n        t && (M = t.min, T = t.max);\n    }\n    function L(n) {\n        b && (u(n), o(n));\n    }\n    function P() {\n        if (C.purge(), n.options.drag && !n.options.disabled) {\n            var e;\n            e = n.options.dragSpeed || 1, p = \"function\" == typeof e ? e : function(n) {\n                return n * e;\n            }, i = n.options.rtl ? -1 : 1, S(), t = n.container, function() {\n                var n = \"data-keen-slider-clickable\";\n                a(\"[\".concat(n, \"]:not([\").concat(n, \"=false])\"), t).map(function(n) {\n                    C.add(n, \"dragstart\", u), C.add(n, \"mousedown\", u), C.add(n, \"touchstart\", u);\n                });\n            }(), C.add(t, \"dragstart\", function(n) {\n                o(n);\n            }), C.add(t, \"click\", L, {\n                capture: !0\n            }), C.input(t, \"ksDragStart\", z), C.input(t, \"ksDrag\", E), C.input(t, \"ksDragEnd\", I), C.input(t, \"mousedown\", z), C.input(t, \"mousemove\", E), C.input(t, \"mouseleave\", I), C.input(t, \"mouseup\", I), C.input(t, \"touchstart\", z, {\n                passive: !0\n            }), C.input(t, \"touchmove\", E, {\n                passive: !1\n            }), C.input(t, \"touchend\", I), C.input(t, \"touchcancel\", I), C.add(window, \"wheel\", function(n) {\n                f && o(n);\n            });\n            var r = \"data-keen-slider-scrollable\";\n            a(\"[\".concat(r, \"]:not([\").concat(r, \"=false])\"), n.container).map(function(n) {\n                return function(n) {\n                    var t;\n                    C.input(n, \"touchstart\", function(n) {\n                        t = O(n), w = !0, k = !0;\n                    }, {\n                        passive: !0\n                    }), C.input(n, \"touchmove\", function(e) {\n                        var i = D(), r = i ? n.scrollHeight - n.clientHeight : n.scrollWidth - n.clientWidth, a = t - O(e), u = i ? n.scrollTop : n.scrollLeft, c = i && \"scroll\" === n.style.overflowY || !i && \"scroll\" === n.style.overflowX;\n                        if (t = O(e), (a < 0 && u > 0 || a > 0 && u < r) && k && c) return w = !0;\n                        k = !1, o(e), w = !1;\n                    }), C.input(n, \"touchend\", function() {\n                        w = !1;\n                    });\n                }(n);\n            });\n        }\n    }\n    n.on(\"updated\", S), n.on(\"optionsChanged\", P), n.on(\"created\", P), n.on(\"destroyed\", C.purge);\n}\nfunction k(n) {\n    var t, e, i = null;\n    function r(t, e, i) {\n        n.animator.active ? o(t, e, i) : requestAnimationFrame(function() {\n            return o(t, e, i);\n        });\n    }\n    function a() {\n        r(!1, !1, e);\n    }\n    function o(e, r, a) {\n        var o = 0, u = n.size, d = n.track.details;\n        if (d && t) {\n            var l = d.slides;\n            t.forEach(function(n, t) {\n                if (e) !i && r && c(n, null, a), s(n, null, a);\n                else {\n                    if (!l[t]) return;\n                    var d = l[t].size * u;\n                    !i && r && c(n, d, a), s(n, l[t].distance * u - o, a), o += d;\n                }\n            });\n        }\n    }\n    function u(t) {\n        return \"performance\" === n.options.renderMode ? Math.round(t) : t;\n    }\n    function c(n, t, e) {\n        var i = e ? \"height\" : \"width\";\n        null !== t && (t = u(t) + \"px\"), n.style[\"min-\" + i] = t, n.style[\"max-\" + i] = t;\n    }\n    function s(n, t, e) {\n        if (null !== t) {\n            t = u(t);\n            var i = e ? t : 0;\n            t = \"translate3d(\".concat(e ? 0 : t, \"px, \").concat(i, \"px, 0)\");\n        }\n        n.style.transform = t, n.style[\"-webkit-transform\"] = t;\n    }\n    function d() {\n        t && (o(!0, !0, e), t = null), n.on(\"detailsChanged\", a, !0);\n    }\n    function l() {\n        r(!1, !0, e);\n    }\n    function p() {\n        d(), e = n.options.vertical, n.options.disabled || \"custom\" === n.options.renderMode || (i = \"auto\" === f(n.options.slides, \"perView\", null), n.on(\"detailsChanged\", a), (t = n.slides).length && l());\n    }\n    n.on(\"created\", p), n.on(\"optionsChanged\", p), n.on(\"beforeOptionsChanged\", function() {\n        d();\n    }), n.on(\"updated\", l), n.on(\"destroyed\", d);\n}\nfunction w(n, t) {\n    return function(e) {\n        var i, o, u, s, d, p, v = c();\n        function m(n) {\n            var t;\n            r(e.container, \"reverse\", \"rtl\" !== (t = e.container, window.getComputedStyle(t, null).getPropertyValue(\"direction\")) || n ? null : \"\"), r(e.container, \"v\", e.options.vertical && !n ? \"\" : null), r(e.container, \"disabled\", e.options.disabled && !n ? \"\" : null);\n        }\n        function g() {\n            b() && M();\n        }\n        function b() {\n            var n = null;\n            if (s.forEach(function(t) {\n                t.matches && (n = t.__media);\n            }), n === i) return !1;\n            i || e.emit(\"beforeOptionsChanged\"), i = n;\n            var t = n ? u.breakpoints[n] : u;\n            return e.options = h(h({}, u), t), m(), I(), A(), C(), !0;\n        }\n        function y(n) {\n            var t = l(n);\n            return (e.options.vertical ? t.height : t.width) / e.size || 1;\n        }\n        function x() {\n            return e.options.trackConfig.length;\n        }\n        function k(n) {\n            for(var r in i = !1, u = h(h({}, t), n), v.purge(), o = e.size, s = [], u.breakpoints || []){\n                var a = window.matchMedia(r);\n                a.__media = r, s.push(a), v.add(a, \"change\", g);\n            }\n            v.add(window, \"orientationchange\", z), v.add(window, \"resize\", E), b();\n        }\n        function w(n) {\n            e.animator.stop();\n            var t = e.track.details;\n            e.track.init(null != n ? n : t ? t.abs : 0);\n        }\n        function M(n) {\n            w(n), e.emit(\"optionsChanged\");\n        }\n        function T(n, t) {\n            if (n) return k(n), void M(t);\n            I(), A();\n            var i = x();\n            C(), x() !== i ? M(t) : w(t), e.emit(\"updated\");\n        }\n        function C() {\n            var n = e.options.slides;\n            if (\"function\" == typeof n) return e.options.trackConfig = n(e.size, e.slides);\n            for(var t = e.slides, i = t.length, r = \"number\" == typeof n ? n : f(n, \"number\", i, !0), a = [], o = f(n, \"perView\", 1, !0), u = f(n, \"spacing\", 0, !0) / e.size || 0, c = \"auto\" === o ? u : u / o, s = f(n, \"origin\", \"auto\"), d = 0, l = 0; l < r; l++){\n                var p = \"auto\" === o ? y(t[l]) : 1 / o - u + c, v = \"center\" === s ? .5 - p / 2 : \"auto\" === s ? 0 : s;\n                a.push({\n                    origin: v,\n                    size: p,\n                    spacing: u\n                }), d += p;\n            }\n            if (d += u * (r - 1), \"auto\" === s && !e.options.loop && 1 !== o) {\n                var h = 0;\n                a.map(function(n) {\n                    var t = d - h;\n                    return h += n.size + u, t >= 1 || (n.origin = 1 - t - (d > 1 ? 0 : 1 - d)), n;\n                });\n            }\n            e.options.trackConfig = a;\n        }\n        function E() {\n            I();\n            var n = e.size;\n            e.options.disabled || n === o || (o = n, T());\n        }\n        function z() {\n            E(), setTimeout(E, 500), setTimeout(E, 2e3);\n        }\n        function I() {\n            var n = l(e.container);\n            e.size = (e.options.vertical ? n.height : n.width) || 1;\n        }\n        function A() {\n            e.slides = a(e.options.selector, e.container);\n        }\n        e.container = (p = a(n, d || document)).length ? p[0] : null, e.destroy = function() {\n            v.purge(), e.emit(\"destroyed\"), m(!0);\n        }, e.prev = function() {\n            e.moveToIdx(e.track.details.abs - 1, !0);\n        }, e.next = function() {\n            e.moveToIdx(e.track.details.abs + 1, !0);\n        }, e.update = T, k(e.options);\n    };\n}\nvar M = function(n, t, e) {\n    try {\n        return function(n, t) {\n            var e, i = {};\n            return e = {\n                emit: function(n) {\n                    i[n] && i[n].forEach(function(n) {\n                        n(e);\n                    });\n                    var t = e.options && e.options[n];\n                    t && t(e);\n                },\n                moveToIdx: function(n, t, i) {\n                    var r = e.track.idxToDist(n, t);\n                    if (r) {\n                        var a = e.options.defaultAnimation;\n                        e.animator.start([\n                            {\n                                distance: r,\n                                duration: f(i || a, \"duration\", 500),\n                                easing: f(i || a, \"easing\", function(n) {\n                                    return 1 + --n * n * n * n * n;\n                                })\n                            }\n                        ]);\n                    }\n                },\n                on: function(n, t, e) {\n                    void 0 === e && (e = !1), i[n] || (i[n] = []);\n                    var r = i[n].indexOf(t);\n                    r > -1 ? e && delete i[n][r] : e || i[n].push(t);\n                },\n                options: n\n            }, function() {\n                if (e.track = b(e), e.animator = g(e), t) for(var n = 0, i = t; n < i.length; n++)(0, i[n])(e);\n                e.track.init(e.options.initial || 0), e.emit(\"created\");\n            }(), e;\n        }(t, m([\n            w(n, {\n                drag: !0,\n                mode: \"snap\",\n                renderMode: \"precision\",\n                rubberband: !0,\n                selector: \".keen-slider__slide\"\n            }),\n            k,\n            x,\n            y\n        ], e || [], !0));\n    } catch (n) {\n        console.error(n);\n    }\n};\nexports.useKeenSlider = function(t, e) {\n    var i = n.useRef(null), r = n.useRef(!1), a = n.useRef(t), o = n.useCallback(function(n) {\n        n ? (a.current = t, i.current = new M(n, t, e), r.current = !1) : (i.current && i.current.destroy && i.current.destroy(), i.current = null);\n    }, []);\n    return n.useEffect(function() {\n        v(a.current, t) || (a.current = t, i.current && i.current.update(a.current));\n    }, [\n        t\n    ]), [\n        o,\n        i\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/keen-slider/react.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/keen-slider/keen-slider.min.css":
/*!******************************************************!*\
  !*** ./node_modules/keen-slider/keen-slider.min.css ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"6e0710c323f5\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMva2Vlbi1zbGlkZXIva2Vlbi1zbGlkZXIubWluLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RlbGlyYXJlLXdlYnNpdGUvLi9ub2RlX21vZHVsZXMva2Vlbi1zbGlkZXIva2Vlbi1zbGlkZXIubWluLmNzcz83MmYyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNmUwNzEwYzMyM2Y1XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/keen-slider/keen-slider.min.css\n");

/***/ })

};
;